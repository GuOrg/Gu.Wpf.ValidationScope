#nullable enable
Gu.Wpf.ValidationScope.DefaultInputTypesExtension
Gu.Wpf.ValidationScope.DefaultInputTypesExtension.DefaultInputTypesExtension() -> void
Gu.Wpf.ValidationScope.ErrorNode
Gu.Wpf.ValidationScope.ErrorNode.Dispose() -> void
Gu.Wpf.ValidationScope.ErrorNode.ErrorNode() -> void
Gu.Wpf.ValidationScope.ErrorNode.ErrorsChanged -> System.EventHandler<Gu.Wpf.ValidationScope.ErrorsChangedEventArgs!>?
Gu.Wpf.ValidationScope.ErrorNode.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler?
Gu.Wpf.ValidationScope.ErrorsChangedEventArgs
Gu.Wpf.ValidationScope.ErrorsChangedEventArgs.ErrorsChangedEventArgs(System.Collections.Generic.IEnumerable<System.Windows.Controls.ValidationError!>! removed, System.Collections.Generic.IEnumerable<System.Windows.Controls.ValidationError!>! added) -> void
Gu.Wpf.ValidationScope.InputNode
Gu.Wpf.ValidationScope.InputTypeCollection
Gu.Wpf.ValidationScope.InputTypeCollection.AddRange(System.Collections.Generic.IEnumerable<System.Type!>! types) -> void
Gu.Wpf.ValidationScope.InputTypeCollection.Contains(System.Windows.DependencyObject! dependencyObject) -> bool
Gu.Wpf.ValidationScope.InputTypeCollection.InputTypeCollection() -> void
Gu.Wpf.ValidationScope.InputTypeCollection.InputTypeCollection(System.Collections.Generic.IEnumerable<System.Type!>! types) -> void
Gu.Wpf.ValidationScope.InputTypeCollectionConverter
Gu.Wpf.ValidationScope.InputTypeCollectionConverter.InputTypeCollectionConverter() -> void
Gu.Wpf.ValidationScope.InputTypesExtension
Gu.Wpf.ValidationScope.InputTypesExtension.InputTypesExtension() -> void
~Gu.Wpf.ValidationScope.InputTypesExtension.InputTypesExtension(System.Type t1) -> void
~Gu.Wpf.ValidationScope.InputTypesExtension.InputTypesExtension(System.Type t1, System.Type t2) -> void
~Gu.Wpf.ValidationScope.InputTypesExtension.InputTypesExtension(System.Type t1, System.Type t2, System.Type t3) -> void
~Gu.Wpf.ValidationScope.InputTypesExtension.InputTypesExtension(System.Type t1, System.Type t2, System.Type t3, System.Type t4) -> void
~Gu.Wpf.ValidationScope.InputTypesExtension.InputTypesExtension(System.Type t1, System.Type t2, System.Type t3, System.Type t4, System.Type t5) -> void
~Gu.Wpf.ValidationScope.InputTypesExtension.InputTypesExtension(System.Type t1, System.Type t2, System.Type t3, System.Type t4, System.Type t5, System.Type t6) -> void
~Gu.Wpf.ValidationScope.InputTypesExtension.InputTypesExtension(System.Type t1, System.Type t2, System.Type t3, System.Type t4, System.Type t5, System.Type t6, System.Type t7) -> void
~Gu.Wpf.ValidationScope.InputTypesExtension.InputTypesExtension(System.Type t1, System.Type t2, System.Type t3, System.Type t4, System.Type t5, System.Type t6, System.Type t7, System.Type t8) -> void
~Gu.Wpf.ValidationScope.InputTypesExtension.InputTypesExtension(System.Type t1, System.Type t2, System.Type t3, System.Type t4, System.Type t5, System.Type t6, System.Type t7, System.Type t8, System.Type t9) -> void
Gu.Wpf.ValidationScope.InputTypesExtension.Types.get -> Gu.Wpf.ValidationScope.InputTypeCollection!
Gu.Wpf.ValidationScope.InputTypesExtension.Types.set -> void
Gu.Wpf.ValidationScope.Node
Gu.Wpf.ValidationScope.Node.Node() -> void
Gu.Wpf.ValidationScope.OneWayToSourceBindings
Gu.Wpf.ValidationScope.OneWayToSourceBindings.Errors.get -> System.Collections.ObjectModel.ReadOnlyObservableCollection<System.Windows.Controls.ValidationError!>!
Gu.Wpf.ValidationScope.OneWayToSourceBindings.Errors.set -> void
Gu.Wpf.ValidationScope.OneWayToSourceBindings.HasError.get -> bool
Gu.Wpf.ValidationScope.OneWayToSourceBindings.HasError.set -> void
Gu.Wpf.ValidationScope.OneWayToSourceBindings.Node.get -> Gu.Wpf.ValidationScope.Node!
Gu.Wpf.ValidationScope.OneWayToSourceBindings.Node.set -> void
Gu.Wpf.ValidationScope.OneWayToSourceBindings.OneWayToSourceBindings() -> void
Gu.Wpf.ValidationScope.Scope
Gu.Wpf.ValidationScope.ScopeNode
Gu.Wpf.ValidationScope.ScopeNode.ScopeNode(System.Windows.DependencyObject! source) -> void
Gu.Wpf.ValidationScope.ScopeValidationErrorEventArgs
Gu.Wpf.ValidationScope.ScopeValidationErrorEventArgs.Action.get -> System.Windows.Controls.ValidationErrorEventAction
Gu.Wpf.ValidationScope.ScopeValidationErrorEventArgs.Error.get -> System.Windows.Controls.ValidationError!
Gu.Wpf.ValidationScope.ValidNode
abstract Gu.Wpf.ValidationScope.ErrorNode.Source.get -> System.Windows.DependencyObject?
abstract Gu.Wpf.ValidationScope.Node.Children.get -> System.Collections.ObjectModel.ReadOnlyObservableCollection<Gu.Wpf.ValidationScope.ErrorNode!>!
abstract Gu.Wpf.ValidationScope.Node.Errors.get -> System.Collections.ObjectModel.ReadOnlyObservableCollection<System.Windows.Controls.ValidationError!>!
abstract Gu.Wpf.ValidationScope.Node.HasError.get -> bool
override Gu.Wpf.ValidationScope.DefaultInputTypesExtension.ProvideValue(System.IServiceProvider! serviceProvider) -> object!
override Gu.Wpf.ValidationScope.ErrorNode.Children.get -> System.Collections.ObjectModel.ReadOnlyObservableCollection<Gu.Wpf.ValidationScope.ErrorNode!>!
override Gu.Wpf.ValidationScope.ErrorNode.Errors.get -> System.Collections.ObjectModel.ReadOnlyObservableCollection<System.Windows.Controls.ValidationError!>!
override Gu.Wpf.ValidationScope.ErrorNode.HasError.get -> bool
override Gu.Wpf.ValidationScope.InputNode.Source.get -> System.Windows.DependencyObject?
override Gu.Wpf.ValidationScope.InputTypeCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext! typeDescriptorContext, System.Type! sourceType) -> bool
override Gu.Wpf.ValidationScope.InputTypeCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext! typeDescriptorContext, System.Type! destinationType) -> bool
override Gu.Wpf.ValidationScope.InputTypeCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext! typeDescriptorContext, System.Globalization.CultureInfo! cultureInfo, object! source) -> object!
override Gu.Wpf.ValidationScope.InputTypeCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext! typeDescriptorContext, System.Globalization.CultureInfo! cultureInfo, object! value, System.Type! destinationType) -> object!
override Gu.Wpf.ValidationScope.InputTypesExtension.ProvideValue(System.IServiceProvider! serviceProvider) -> object!
override Gu.Wpf.ValidationScope.ScopeNode.Source.get -> System.Windows.DependencyObject?
override Gu.Wpf.ValidationScope.ValidNode.Children.get -> System.Collections.ObjectModel.ReadOnlyObservableCollection<Gu.Wpf.ValidationScope.ErrorNode!>!
override Gu.Wpf.ValidationScope.ValidNode.Errors.get -> System.Collections.ObjectModel.ReadOnlyObservableCollection<System.Windows.Controls.ValidationError!>!
override Gu.Wpf.ValidationScope.ValidNode.HasError.get -> bool
static Gu.Wpf.ValidationScope.InputTypeCollection.IsCompatibleType(System.Type! type) -> bool
static Gu.Wpf.ValidationScope.Scope.AddErrorHandler(System.Windows.DependencyObject! element, System.EventHandler<Gu.Wpf.ValidationScope.ScopeValidationErrorEventArgs!>! handler) -> void
static Gu.Wpf.ValidationScope.Scope.AddErrorsChangedHandler(this System.Windows.DependencyObject! element, System.EventHandler<Gu.Wpf.ValidationScope.ErrorsChangedEventArgs!>! handler) -> void
static Gu.Wpf.ValidationScope.Scope.GetErrors(System.Windows.DependencyObject! element) -> System.Collections.ObjectModel.ReadOnlyObservableCollection<System.Windows.Controls.ValidationError!>!
static Gu.Wpf.ValidationScope.Scope.GetForInputTypes(System.Windows.UiElement! element) -> Gu.Wpf.ValidationScope.InputTypeCollection?
static Gu.Wpf.ValidationScope.Scope.GetHasError(System.Windows.UIElement! element) -> bool
static Gu.Wpf.ValidationScope.Scope.GetNode(System.Windows.DependencyObject! element) -> Gu.Wpf.ValidationScope.Node?
static Gu.Wpf.ValidationScope.Scope.GetOneWayToSourceBindings(this System.Windows.UIElement! element) -> Gu.Wpf.ValidationScope.OneWayToSourceBindings!
static Gu.Wpf.ValidationScope.Scope.RemoveErrorHandler(System.Windows.DependencyObject! element, System.EventHandler<Gu.Wpf.ValidationScope.ScopeValidationErrorEventArgs!>! handler) -> void
static Gu.Wpf.ValidationScope.Scope.RemoveErrorsChangedHandler(this System.Windows.DependencyObject! element, System.EventHandler<Gu.Wpf.ValidationScope.ErrorsChangedEventArgs!>! handler) -> void
static Gu.Wpf.ValidationScope.Scope.SetForInputTypes(System.Windows.UiElement! element, Gu.Wpf.ValidationScope.InputTypeCollection? value) -> void
static Gu.Wpf.ValidationScope.Scope.SetOneWayToSourceBindings(this System.Windows.UIElement! element, Gu.Wpf.ValidationScope.OneWayToSourceBindings! value) -> void
static readonly Gu.Wpf.ValidationScope.InputTypeCollection.Default -> Gu.Wpf.ValidationScope.InputTypeCollection!
static readonly Gu.Wpf.ValidationScope.OneWayToSourceBindings.ErrorsProperty -> System.Windows.DependencyProperty!
static readonly Gu.Wpf.ValidationScope.OneWayToSourceBindings.HasErrorProperty -> System.Windows.DependencyProperty!
static readonly Gu.Wpf.ValidationScope.OneWayToSourceBindings.NodeProperty -> System.Windows.DependencyProperty!
static readonly Gu.Wpf.ValidationScope.Scope.ErrorsChangedEvent -> System.Windows.RoutedEvent!
static readonly Gu.Wpf.ValidationScope.Scope.ErrorsProperty -> System.Windows.DependencyProperty!
static readonly Gu.Wpf.ValidationScope.Scope.ForInputTypesProperty -> System.Windows.DependencyProperty!
static readonly Gu.Wpf.ValidationScope.Scope.HasErrorProperty -> System.Windows.DependencyProperty!
static readonly Gu.Wpf.ValidationScope.Scope.NodeProperty -> System.Windows.DependencyProperty!
static readonly Gu.Wpf.ValidationScope.Scope.OneWayToSourceBindingsProperty -> System.Windows.DependencyProperty!
static readonly Gu.Wpf.ValidationScope.Scope.ValidationErrorEvent -> System.Windows.RoutedEvent!
static readonly Gu.Wpf.ValidationScope.ValidNode.Default -> Gu.Wpf.ValidationScope.ValidNode!
virtual Gu.Wpf.ValidationScope.ErrorNode.Dispose(bool disposing) -> void
virtual Gu.Wpf.ValidationScope.ErrorNode.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs! args) -> void
