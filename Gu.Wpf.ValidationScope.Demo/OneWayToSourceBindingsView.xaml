<UserControl x:Class="Gu.Wpf.ValidationScope.Demo.OneWayToSourceBindingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Gu.Wpf.ValidationScope.Demo"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:validationScope="http://gu.se/ValidationScope"
             mc:Ignorable="d">
    <UserControl.DataContext>
        <local:OneWayToSourceBindingsViewModel />
    </UserControl.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Border BorderBrush="{Binding Path=(validationScope:Scope.HasErrors),
                                      Converter={local:BoolToBrushConverter},
                                      ElementName=Form}"
                BorderThickness="1">
            <Grid x:Name="Form"
                  validationScope:Scope.ErrorsOneWayToSourceBinding="{Binding Errors,
                                                                              Mode=OneWayToSource}"
                  validationScope:Scope.ForInputTypes="{x:Static validationScope:InputTypeCollection.Default}"
                  validationScope:Scope.HasErrorsOneWayToSourceBinding="{Binding HasError,
                                                                                 Mode=OneWayToSource}">
                <!--  this is where we define our scope, we do so by telling the scope what types of control sto track  -->
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0"
                           Grid.Column="0"
                           Text="SomeIntValue" />
                <TextBox Grid.Row="0"
                         Grid.Column="1"
                         AutomationProperties.AutomationId="{x:Static local:AutomationIDs.TextBox1}"
                         Text="{Binding IntValue,
                                        UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Grid.Row="1"
                           Grid.Column="0"
                           Text="SameIntValue" />
                <TextBox Grid.Row="1"
                         Grid.Column="1"
                         AutomationProperties.AutomationId="{x:Static local:AutomationIDs.TextBox2}"
                         Text="{Binding IntValue,
                                        UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </Border>

        <GroupBox Grid.Row="1"
                  AutomationProperties.AutomationId="{x:Static local:AutomationIDs.ViewErrorsGroupBox}"
                  Header="View errors">
            <StackPanel>
                <TextBlock Foreground="Red"
                           Text="{Binding Path=(validationScope:Scope.Errors).Count,
                                          ElementName=Form,
                                          StringFormat='Children: {0}'}" />
                <ItemsControl AutomationProperties.AutomationId="{x:Static local:AutomationIDs.ErrorList}"
                              ItemsSource="{Binding Path=(validationScope:Scope.Errors),
                                                    ElementName=Form}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type ValidationError}">
                            <TextBlock AutomationProperties.AutomationId="{x:Static local:AutomationIDs.ErrorText}"
                                       Foreground="Red"
                                       Text="{Binding ErrorContent}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </GroupBox>

        <GroupBox Grid.Row="2"
                  AutomationProperties.AutomationId="{x:Static local:AutomationIDs.BoundErrorsGroupBox}"
                  Header="Bound errors">
            <StackPanel>
                <CheckBox AutomationProperties.AutomationId="{x:Static local:AutomationIDs.HasErrorsBox}"
                          Content="Vm has error"
                          IsChecked="{Binding HasError,
                                              Mode=OneWay}"
                          IsEnabled="False" />

                <ItemsControl AutomationProperties.AutomationId="{x:Static local:AutomationIDs.ErrorList}"
                              ItemsSource="{Binding Errors}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type ValidationError}">
                            <TextBlock AutomationProperties.AutomationId="{x:Static local:AutomationIDs.ErrorText}"
                                       Foreground="Red"
                                       Text="{Binding ErrorContent}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </GroupBox>


    </Grid>
</UserControl>
